{"version":3,"sources":["serviceWorker.js","lib/baseModule.js","lib/moduleContext.js","modules/Portal/index.js","lib/baseViewModule.js","modules/Counter/index.js","lib/autobind.js","modules/Todos/index.js","modules/Navigation/index.js","index.js","MainView.js","components/TodosPanel/index.js","components/CounterPanel/index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BaseModule","_","module","persistConfig","key","storage","localForage","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","logger","persistor","persistStore","Module","ModuleContext","React","createContext","ModuleProvider","_ref","children","react_default","a","createElement","Provider","value","defaultProps","Portal","arguments","length","undefined","_this$_arguments","this","_arguments","main","components","Object","entries","forEach","moduleSelector","_ref2","slicedToArray","name","component","screen","portal","toString","call","Error","concat","Component","WithModule","connect","parentProps","getViewProps","props","Consumer","assign","router","navigation","createRouter","createNavigator","createApp","_modules","counter","todos","ViewModule","propertyName","moduleName","__proto__","constructor","Counter","num","count","_this2","increase","calculate","decrease","action","target","options","defineProperty","objectSpread","configurable","writable","enumerable","autobind","SyntaxError","fn","get","getPrototypeOf","boundFn","bind","set","FILTERS","All","Active","Completed","Todos","filters","values","text","push","id","Math","random","completed","todo","find","filter","visibilityFilter","list","setVisibility","toggleTodo","toggle","addTodo","add","computed","Navigation","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","apply","_createApp","createBrowserApp","_createNavigator","_createRouter","SwitchRouter","modules","create","descriptors","descriptor","routes","index","dist","routeName","lib_module","getComponent","Home","_useState","useState","_useState2","setState","onChange","e","onClick","map","style","color","textDecoration","path","App","ReactDOM","render","es","integration_react","loading","moduleContext_ModuleProvider","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.54fa4d27.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport Module, { state, action, computed } from 'usm-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport * as localForage from 'localforage';\n\nclass BaseModule extends Module {\n  static _generateStore(_, module) {\n    const persistConfig = {\n      key: 'root',\n      storage: localForage,\n    };\n    const persistedReducer = persistReducer(persistConfig, module.reducers);\n    const store = createStore(\n      persistedReducer, \n      applyMiddleware(logger)\n    );\n    module.persistor = persistStore(store);\n    return store;\n  }\n}\n\nexport {\n  BaseModule as default,\n  state,\n  action,\n  computed\n} \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst ModuleContext = React.createContext(null);\n\nconst ModuleProvider = ({ module, children }) => (\n  <ModuleContext.Provider value={module}>\n    {children}\n  </ModuleContext.Provider>\n);\n\nModuleProvider.propTypes = {\n  module: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\nModuleProvider.defaultProps = {\n  children: null,\n};\n\nconst connectModule = (moduleSelector) => {\n  return Component => {\n    const WithModule = connect(\n      (_, parentProps) => moduleSelector(parentProps.module).getViewProps(parentProps),\n    )(Component);\n    return props => (\n      <ModuleContext.Consumer>\n        {\n          module => (\n            <WithModule\n              module={module}\n              {...props}\n            />\n          )\n        }\n      </ModuleContext.Consumer>\n    );\n  };\n}\n\nexport {\n  ModuleContext as default,\n  ModuleProvider,\n  connectModule,\n};\n\n","import Module from '../../lib/baseModule';\nimport { connectModule } from '../../lib/moduleContext';\n\nexport default class Portal extends Module {\n  createApp(config = {}) {\n    const { main, components } = this._arguments;\n    Object.entries(components).forEach(([name, component]) => {\n      component.screen = connectModule(portal => {\n        if (toString.call(component.module) === '[object Object]') {\n          return component.module;\n        }\n        if (typeof component.module === 'string') {\n          return portal[component.module];\n        }\n        throw new Error(`${name} components must be set module.`);\n      })(component.screen);\n    });\n    const router = this.navigation.createRouter(components);\n    const navigator = this.navigation.createNavigator(main, router, config);\n    return this.navigation.createApp(navigator);\n  }\n\n  get navigation() {\n    return this._modules.navigation;\n  }\n\n  get counter() {\n    return this._modules.counter;\n  }\n\n  get todos() {\n    return this._modules.todos;\n  }\n}\n","import Module, { state, action, computed } from './baseModule';\n\nfunction produceErrorMessage(propertyName) {\n  const moduleName = this.__proto__.constructor.name;\n  return  `${moduleName} property '${propertyName}' need be overridden.`;\n}\n\nclass ViewModule extends Module {\n  getViewProps() {\n    throw new Error(produceErrorMessage.call(this, 'getViewProps'));\n  }\n}\n\nexport {\n  ViewModule as default,\n  state,\n  action,\n  computed\n}","import ViewModule, { state, action } from '../../lib/baseViewModule';\n\nexport default class Counter extends ViewModule {\n  @state count = 0;\n\n  @action\n  calculate(num, state) {\n    state.count += num;\n  }\n\n  getViewProps() {\n    return {\n      count: this.count,\n      increase: () => this.calculate(1),\n      decrease: () => this.calculate(-1),\n    };\n  }\n}\n","function assign(target, key, value, options) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    writable: true,\n    enumerable: true,\n    value,\n    ...options,\n  });\n}\n\nexport function autobind(target, key, { value, configurable, enumerable }) {\n\tif (typeof value !== 'function') {\n\t\tthrow new SyntaxError(`@autobind decorator must be applied to functions not: ${typeof fn}`);\n\t}\n\treturn {\n\t\tconfigurable,\n    enumerable,\n\t\tget() {\n      if (this === target) {\n        return value;\n      }\n      if (\n        target.constructor !== this.constructor &&\n        target.constructor === Object.getPrototypeOf(this).constructor\n      ) {\n        return value;\n      }\n\t\t\tconst boundFn = value.bind(this);\n      assign(this, key, boundFn, { enumerable: false });\n\t\t\treturn boundFn;\n\t\t},\n\t\tset(value) {\n      assign(this, key, value);\n\t\t}\n\t};\n}\n","import ViewModule, { state, action, computed } from '../../lib/baseViewModule';\nimport { autobind } from '../../lib/autobind';\n\nconst FILTERS = {\n  All: 'All',\n  Active: 'Active',\n  Completed: 'Completed'\n};\n\nexport default class Todos extends ViewModule {\n  @state todos = [];\n  @state visibilityFilter = FILTERS.All;\n  filters = Object.values(FILTERS);\n\n  @autobind\n  @action\n  add(text, state) {\n    state.todos.push({\n      text,\n      id: `${Math.random()}`,\n      completed: false,\n    })\n  }\n\n  @autobind\n  @action\n  toggle(id, state) {\n    const todo = state.todos.find(todo => todo.id === id)\n    todo.completed = !todo.completed\n  }\n  \n  @autobind\n  @action\n  setVisibility(filter, state) {\n    state.visibilityFilter = filter\n  }\n\n  @computed\n  list = [\n    () => this.todos,\n    () => this.visibilityFilter,\n    (todos, visibilityFilter) => todos.filter(({ completed }) => \n      visibilityFilter === FILTERS.All ||\n      ( visibilityFilter === FILTERS.Active && !completed) ||\n      ( visibilityFilter === FILTERS.Completed && completed)\n    )\n  ]\n\n  getViewProps() {\n    return {\n      list: this.list,\n      filters: this.filters,\n      visibilityFilter: this.visibilityFilter,\n      setVisibility: this.setVisibility,\n      toggleTodo: this.toggle,\n      addTodo: this.add,\n    };\n  }\n}\n","import { createBrowserApp } from '@react-navigation/web';\nimport { createNavigator, SwitchRouter } from \"@react-navigation/core\";\nimport Module from '../../lib/baseModule';\n\nexport default class Navigation extends Module {\n  constructor(...args) {\n    super(...args);\n    this._createApp = createBrowserApp;\n    this._createNavigator = createNavigator;\n    this._createRouter = SwitchRouter;\n  }\n\n  createApp(...args) {\n    return this._createApp(...args);\n  }\n\n  createNavigator(...args) {\n    return this._createNavigator(...args);\n  }\n\n  createRouter(...args) {\n    return this._createRouter(...args);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport Portal from './modules/Portal';\nimport Counter from './modules/Counter';\nimport Todos from './modules/Todos';\nimport Navigation from './modules/Navigation';\nimport MainView from './MainView';\nimport TodosView from './components/TodosPanel';\nimport CounterView from './components/CounterPanel';\nimport { ModuleProvider } from './lib/moduleContext';\n\nconst counter = new Counter();\nconst todos = new Todos({\n  modules: {\n    counter,\n  }\n});\nconst navigation = new Navigation();\nconst portal = Portal.create({\n  modules: {\n    counter,\n    todos,\n    navigation,\n  },\n  main: MainView,\n  components: {\n    Home: {\n      screen: TodosView,\n      path: '',\n      module: todos,\n    },\n    Counter: {\n      screen: CounterView,\n      path: 'Counter',\n      module: counter,\n    },\n  }\n});\nconst App = portal.createApp();\nwindow.portal = portal;\nReactDOM.render(\n  <Provider store={portal.store}>\n    <PersistGate loading={null} persistor={portal.persistor}>\n      <ModuleProvider module={portal}>\n        <App />\n      </ModuleProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { SceneView } from \"@react-navigation/core\";\nimport { Link } from \"@react-navigation/web\";\n\nexport default ({ descriptors, navigation }) => {\n  const { key } = navigation.state.routes[navigation.state.index];\n  const descriptor = descriptors[key];\n  return (\n    <div>\n      <Link routeName={\"Home\"} navigation={navigation}>Home</Link>\n      <Link routeName={\"Counter\"} navigation={navigation}>Counter</Link>\n      <SceneView\n        navigation={descriptor.navigation}\n        component={descriptor.getComponent()}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nexport default ({\n  visibilityFilter,\n  filters,\n  list,\n  setVisibility,\n  addTodo,\n  toggleTodo,\n}) =>  {\n  const [state, setState] = useState('');\n  return (\n    <div>\n      <input value={state} onChange={e => setState(e.target.value)}/>\n      <button\n        onClick={() => {\n          addTodo(state);\n          setState('');\n        }}>\n        Add\n      </button>\n      <ul>\n        {filters.map((filter, index) =>\n          <li\n            key={index}\n            style={{color: visibilityFilter === filter ? 'red' : 'black'}}\n            onClick={() => setVisibility(filter)}>\n            {filter}\n          </li>\n        )}\n      </ul>\n      <ul>\n        {list.map(({ text, id, completed }, index) => \n          <li\n            key={index}\n            style={{textDecoration: completed ? 'line-through' : ''}}\n            onClick={() => toggleTodo(id)}>\n            {text}\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}","import React from 'react';\n\nexport default ({ count, increase, decrease }) => \n  <div>\n    <button onClick={decrease}>-</button> \n    {count}\n    <button onClick={increase}>+</button> \n  </div>"],"sourceRoot":""}